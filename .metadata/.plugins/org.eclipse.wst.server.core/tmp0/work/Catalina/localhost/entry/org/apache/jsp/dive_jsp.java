/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2020-02-04 13:07:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dive_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("<title>FOR(CE)GET.</title>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/dive.css\">\n");
      out.write("<!-- use cdn for the library / link the library file -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/baffle@0.3.6/dist/baffle.min.js\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js\"></script>\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css\"> -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<!-- Header -->\n");
      out.write("\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\t<!-- image hover -->\n");
      out.write("\t\n");
      out.write("\t<div class=\"cursor\"></div>\n");
      out.write("        <div class=\"cursor-follower\"></div>\n");
      out.write("        <div id=\"wrapper\">\n");
      out.write("            <div class=\"portfolio-item\">\n");
      out.write("                <div class=\"portfolio-thumb\">\n");
      out.write("                    <img src=\"./img/force1.png\" alt=\"\" />\n");
      out.write("                    \t<span id=\"demo\"> AIR FORCE 1 <br/><br/></span>\n");
      out.write("                    \t<span id=\"in-demo\"> ENTRY Term : 02/04(월) 22:00 ~ 23:00 (1시간)<br/>\n");
      out.write("                    \t\t\t\t\t\t당첨자 발표 : 02/05(화) 07:00<br/>\n");
      out.write("                    \t\t\t\t\t\t구매 기간 : 02/07(수) 12:00 ~ 14:00 (2시간)\n");
      out.write("                    \t</span>\n");
      out.write("                </div>\n");
      out.write("            \t\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"btn\">\n");
      out.write("            <!-- <button type=\"button\" onclick=\"return confirm();\">ENTRY</button> -->\n");
      out.write("            <!-- <input type=\"button\" id=\"entry\" value=\"ENTRY\"></input> -->\n");
      out.write("            <button type=\"button\" onclick=\"myFunction()\">ENTRY</button>\n");
      out.write("            <script>\n");
      out.write("            \tfunction myFunction(){\n");
      out.write("            \t\t");

					String getSession = (String)session.getAttribute("id");
					if(getSession == null || getSession.equals("")){
					
      out.write("\n");
      out.write("        \t\t\tlocation.href=\"login.jsp\";\n");
      out.write("        \t\t\treturn false;\n");
      out.write("\t\t\t\t\t");

					}
            		
      out.write("\n");
      out.write("            \t\tif(confirm(\"Entry?\") == true){\n");
      out.write("            \t\t\tlocation.href=\"entry.jsp\";\n");
      out.write("            \t\t\treturn true;\n");
      out.write("            \t\t}\n");
      out.write("            \t\telse{\n");
      out.write("            \t\t\talert(\"취소되었습니다.\");\n");
      out.write("            \t\t\treturn false;\n");
      out.write("            \t\t}\n");
      out.write("            \t}\n");
      out.write("            </script>\n");
      out.write("        </div>\n");
      out.write("        <script>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            var cursor = $(\".cursor\"),\n");
      out.write("                follower = $(\".cursor-follower\");\n");
      out.write("\n");
      out.write("            var posX = 0,\n");
      out.write("                posY = 0,\n");
      out.write("                mouseX = 0,\n");
      out.write("                mouseY = 0;\n");
      out.write("\n");
      out.write("            TweenMax.to({}, 0.016, {\n");
      out.write("                repeat: -1,\n");
      out.write("                onRepeat: function() {\n");
      out.write("                    posX += (mouseX - posX) / 9;\n");
      out.write("                    posY += (mouseY - posY) / 9;\n");
      out.write("\n");
      out.write("                    TweenMax.set(follower, {\n");
      out.write("                        css: {\n");
      out.write("                            left: posX - 20,\n");
      out.write("                            top: posY - 20\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("\n");
      out.write("                    TweenMax.set(cursor, {\n");
      out.write("                        css: {\n");
      out.write("                            left: mouseX,\n");
      out.write("                            top: mouseY\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).on(\"mousemove\", function(e) {\n");
      out.write("                mouseX = e.pageX;\n");
      out.write("                mouseY = e.pageY;\n");
      out.write("            });\n");
      out.write("\n");
      out.write("/*             $(\".portfolio-item img\").on(\"mouseenter\", function() {\n");
      out.write("                cursor.addClass(\"active\");\n");
      out.write("                follower.addClass(\"active\");\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(\".portfolio-item img\").on(\"mouseleave\", function() {\n");
      out.write("                cursor.removeClass(\"active\");\n");
      out.write("                follower.removeClass(\"active\");\n");
      out.write("            }); */\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
